" probably fix for Vundle problems
set shell=/bin/bash

" this is for VIM, so let's enable all features
set nocompatible

" turn off filetype detection (required by Vundle)
filetype off

" activate Vundle
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()

" ===== Vundle Plugins ====================================

" Manage Vundle with Vundle
Plugin 'gmarik/Vundle.vim'

" Auto balance brackets, quotes, ...
Plugin 'vim-scripts/delimitMate.vim'

" File explorer
Plugin 'scrooloose/nerdtree'

" General integration of Git
Plugin 'tpope/vim-fugitive'

" Indicate changes in the file (only supporting Git)
Plugin 'airblade/vim-gitgutter'

" Show indentation guides
Plugin 'nathanaelkane/vim-indent-guides'

" Enhances status line
Plugin 'vim-airline/vim-airline'

" Read and apply .editorconfig
Plugin 'editorconfig/editorconfig-vim'

Plugin 'vim-python/python-syntax'

" Colorschemes

" looks really nice, evaluate in 256
"
" - Colors seem a little too tuned down
" - the primary color (white-ish) is a little to hard in contrast to the backround
" - Python and Typescript looking good
" - I don't really like the colors...
Plugin 'danilo-augusto/vim-afterglow'

" evaluate for 256, might need color adjustments; some nice features
"
" - low contrast between primary color and (linewise) comments
" - looking good on Python and TypeScript
" - colors hardcoded, without palette abstraction
Plugin 'pasela/edark.vim'

Plugin 'joshdick/onedark.vim'
Plugin 'NLKNguyen/papercolor-theme'

call vundle#end()
" =========================================================


" ===== general configuration =============================

syntax on           " enable syntax hightlighting
set number          " enable line numbers
set ignorecase      " ignore case while searching
set title           " show title in console title bar
set visualbell      " no bell, just blink the screen
set noautowrite     " thanks, no automatic writing
set noautowriteall
set confirm
set noautoread      " and surely no automatic reading
set nobackup        " deactivate auto-backup
set nowb
set noswapfile      " get rid of this nasty swap files
" set cmdheight=0     " do not show the command line (requires vim > 9.0)

set t_Co=256        " set colorspace to 256
set background=dark " manually override the background
colorscheme edark  " actually apply the colorscheme
" =========================================================


" ===== editing ===========================================

set nowrap          " don't wrap lines
set linebreak       " and surely don't wrap text in the middle of a word
set expandtab       " use spaces instead of tabs
set tabstop=4       " <tab> produces 4 spaces
set shiftwidth=4
set scrolloff=3     " let some lines...
set sidescroll=10   " ... and characters be visible while scrolling
set cursorline      " highlight the current line
set cursorlineopt=number,screenline
set hlsearch        " highlight search results

" ``colorcolumn`` let you set visual markers for the line length.
" As this is only relevant while editing, the setting is not applied directly.
" Instead, it is only shown in ``INSERT`` mode.
" Use the ``autocmd`` line including ``InsertEnter`` as usual.
" See https://codeyarns.com/tech/2013-02-07-how-to-show-colorcolumn-only-in-insert-mode-of-vim.html
augroup ColorColumnInsertMode
    autocmd!
    autocmd InsertEnter * setlocal colorcolumn=80
    autocmd InsertLeave * setlocal colorcolumn=0
augroup END
" =========================================================

" ===== custom functions ======================================================

" Return the highlight group and its effective link
" See https://stackoverflow.com/a/37040415
function! SynStack ()
    let l:s = synID(line('.'), col('.'), 1)
    echo synIDattr(l:s, 'name') . ' -> ' . synIDattr(synIDtrans(l:s), 'name')
endfunction


" ====== plugin settings ==================================

" indent-guides
let g:indent_guides_start_level=2
let g:indent_guides_guide_size=1

" GitGutter (color adjustments)
"highlight! link SignColumn LineNr
"highlight GitGutterAdd    guifg=#009900 ctermfg=2
"highlight GitGutterChange guifg=#bbbb00 ctermfg=3
"highlight GitGutterDelete guifg=#ff2222 ctermfg=1
" =========================================================


" ===== keys ==============================================

let mapleader = ","  " use , as the leader key

" Provide mappings for buffer management (only available in NORMAL mode)
nnoremap <Leader>b :buffers<CR>:buffer<Space>
nnoremap <Leader>v :bprev<CR>
nnoremap <Leader>n :bnext<CR>

" Provide a mapping for the custom SynStack function
map <F10> :call SynStack()<CR>

" Mapping for indent-guides plugin
nnoremap <Leader>g :IndentGuidesToggle<CR>

command! W :w       " let me save with 'W'

map <F2> :NERDTreeToggle<CR>
" =========================================================
